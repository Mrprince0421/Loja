[project]
name = "loja"
version = "0.1.0"
description = ""
authors = [
    {name = "Marcos Eduardo",email = "marcos.edu0102@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.12,<4.0"
dependencies = [
    "fastapi (>=0.116.1,<0.117.0)",
    "uvicorn[standard] (>=0.35.0,<0.36.0)",
    "httpx (>=0.28.1,<0.29.0)",
    "pydantic[email] (>=2.11.7,<3.0.0)",
    "sqlalchemy (>=2.0.43,<3.0.0)",
    "pydantic-settings (>=2.10.1,<3.0.0)",
    "alembic (>=1.16.4,<2.0.0)",
    "pwdlib[argon2] (>=0.2.1,<0.3.0)",
    "python-multipart (>=0.0.20,<0.0.21)",
    "pyjwt (>=2.10.1,<3.0.0)",
    "tzdata (>=2025.2,<2026.0)",
    "freezegun (>=1.5.5,<2.0.0)",
    "jinja2 (>=3.1.6,<4.0.0)",
    "psycopg2-binary (>=2.9.10,<3.0.0)",
    "httpx (>=0.28.1,<0.29.0)", # Adicionado httpx para a chamada da API
]

[tool.poetry]
packages = [{include = "loja", from = "src"}]


[tool.poetry.group.dev.dependencies]
pytest = "^8.4.1"
pytest-cov = "^6.2.1"
taskipy = "^1.14.1"
ruff = "^0.12.9"
factory-boy = "^3.3.3"
[tool.ruff]
line-length = 79
extend-exclude = ['migrations']

[tool.pytest.ini_options]
pythonpath = "."
addopts = '-p no:warnings'

[tool.ruff.lint]
preview = true
select = ['I', 'F', 'E', 'W', 'PL', 'PT']

[tool.ruff.format]
preview = true
quote-style = 'single'

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.taskipy.tasks]
lint = 'poetry run ruff check'
test = 'poetry run pytest -s -x --cov=loja -vv'
run = 'poetry run uvicorn main:app --reload'
format = 'poetry run ruff format'
post_test = 'poetry run coverage html'