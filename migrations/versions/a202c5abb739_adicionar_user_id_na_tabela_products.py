"""Adicionar user_id na tabela products

Revision ID: a202c5abb739
Revises: 2485d36aba56
Create Date: 2025-09-08 19:56:29.295443

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a202c5abb739'
down_revision: Union[str, Sequence[str], None] = '2485d36aba56'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # Passo 1: Adicionar a coluna `user_id` permitindo valores nulos
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])

    # Passo 2: Preencher a nova coluna com um valor padrão para registros existentes
    # É fundamental que você tenha ao menos um usuário na tabela 'users'
    # para usar o ID dele como valor padrão (ex: ID 1).
    op.execute("UPDATE products SET user_id = 1 WHERE user_id IS NULL")

    # Passo 3: Alterar a coluna para NOT NULL
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.alter_column('user_id', existing_type=sa.Integer(), nullable=False)


def downgrade() -> None:
    # ### commands auto generated by Alembic - por favor ajuste! ###
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.drop_constraint(None, 'user_id', type_='foreignkey')
        batch_op.drop_column('user_id')
    # ### end Alembic commands ###
